---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: instances.compute.vkcs.upbound.io
spec:
  group: compute.vkcs.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vkcs
    kind: Instance
    listKind: InstanceList
    plural: instances
    singular: instance
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Instance is the Schema for the Instances API. Manages a compute
          VM instance.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstanceSpec defines the desired state of Instance
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accessIpV4:
                    description: optional string →  The first detected Fixed IPv4
                      address. The first detected Fixed IPv4 address.
                    type: string
                  adminPassSecretRef:
                    description: optional sensitive string →  The administrative password
                      to assign to the server. Changing this changes the root password
                      on the existing server. The administrative password to assign
                      to the server. Changing this changes the root password on the
                      existing server.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  availabilityZone:
                    description: optional string →  The availability zone in which
                      to create the server. Conflicts with availability_zone_hints.
                      Changing this creates a new server. The availability zone in
                      which to create the server. Conflicts with `availability_zone_hints`.
                      Changing this creates a new server.
                    type: string
                  blockDevice:
                    description: optional →  Configuration of block devices. The block_device
                      structure is documented below. Changing this creates a new server.
                      You can specify multiple block devices which will create an
                      instance with multiple disks. This configuration is very flexible,
                      so please see the following reference for more information.
                      Configuration of block devices. The block_device structure is
                      documented below. Changing this creates a new server. You can
                      specify multiple block devices which will create an instance
                      with multiple disks. This configuration is very flexible, so
                      please see the following [reference](https://docs.openstack.org/nova/latest/user/block-device-mapping.html)
                      for more information.
                    items:
                      properties:
                        bootIndex:
                          description: '1 if more than one is configured. Changing
                            this creates a new server. Note: You must set the boot
                            index to 0 for one of the block devices if more than one
                            is defined. The boot index of the volume. It defaults
                            to 0 if only one `block_device` is specified, and to -1
                            if more than one is configured. Changing this creates
                            a new server. _note_ You must set the boot index to 0
                            for one of the block devices if more than one is defined.'
                          type: number
                        deleteOnTermination:
                          description: optional boolean →  Delete the volume / block
                            device upon termination of the instance. Defaults to false.
                            Changing this creates a new server.  raw HTML omitted  It
                            is important to enable delete_on_termination for volumes
                            created with instance. Defaults to false. Changing this
                            creates a new server. __note__ It is important to enable
                            `delete_on_termination` for volumes created with instance
                          type: boolean
                        destinationType:
                          description: optional string →  The type that gets created.
                            Possible values are "volume" and "local". Changing this
                            creates a new server. The type that gets created. Possible
                            values are "volume" and "local". Changing this creates
                            a new server.
                          type: string
                        deviceType:
                          description: level device type that will be used. Most common
                            thing is to leave this empty. Changing this creates a
                            new server. The low-level device type that will be used.
                            Most common thing is to leave this empty. Changing this
                            creates a new server.
                          type: string
                        diskBus:
                          description: level disk bus that will be used. Most common
                            thing is to leave this empty. Changing this creates a
                            new server. The low-level disk bus that will be used.
                            Most common thing is to leave this empty. Changing this
                            creates a new server.
                          type: string
                        guestFormat:
                          description: 'optional string →  Specifies the guest server
                            disk file system format, such as ext2, ext3, ext4, xfs
                            or swap. Swap block device mappings have the following
                            restrictions: source_type must be blank and destination_type
                            must be local and only one swap disk per server and the
                            size of the swap disk must be less than or equal to the
                            swap size of the flavor. Changing this creates a new server.
                            Specifies the guest server disk file system format, such
                            as `ext2`, `ext3`, `ext4`, `xfs` or `swap`. Swap block
                            device mappings have the following restrictions: source_type
                            must be blank and destination_type must be local and only
                            one swap disk per server and the size of the swap disk
                            must be less than or equal to the swap size of the flavor.
                            Changing this creates a new server.'
                          type: string
                        sourceType:
                          description: required string →  The source type of the device.
                            Must be one of "blank", "image", "volume", or "snapshot".
                            Changing this creates a new server. The source type of
                            the device. Must be one of "blank", "image", "volume",
                            or "snapshot". Changing this creates a new server.
                          type: string
                        uuid:
                          description: optional string →  The UUID of the image, volume,
                            or snapshot. Optional if source_type is set to "blank".
                            Changing this creates a new server. The UUID of the image,
                            volume, or snapshot. Optional if `source_type` is set
                            to `"blank"`. Changing this creates a new server.
                          type: string
                        uuidRef:
                          description: Reference to a Volume in disk to populate uuid.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        uuidSelector:
                          description: Selector for a Volume in disk to populate uuid.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        volumeSize:
                          description: 'optional number →  The size of the volume
                            to create (in gigabytes). Required in the following combinations:
                            source=image and destination=volume, source=blank and
                            destination=local, and source=blank and destination=volume.
                            Changing this creates a new server. The size of the volume
                            to create (in gigabytes). Required in the following combinations:
                            source=image and destination=volume, source=blank and
                            destination=local, and source=blank and destination=volume.
                            Changing this creates a new server.'
                          type: number
                        volumeType:
                          description: optional string →  The volume type that will
                            be used. Changing this creates a new server. The volume
                            type that will be used. Changing this creates a new server.
                          type: string
                      type: object
                    type: array
                  configDrive:
                    description: optional boolean →  Whether to use the config_drive
                      feature to configure the instance. Changing this creates a new
                      server. Whether to use the config_drive feature to configure
                      the instance. Changing this creates a new server.
                    type: boolean
                  flavorId:
                    description: optional string →  The flavor ID of the desired flavor
                      for the server. Required if flavor_name is empty. Changing this
                      resizes the existing server. The flavor ID of the desired flavor
                      for the server. Required if `flavor_name` is empty. Changing
                      this resizes the existing server.
                    type: string
                  flavorIdRef:
                    description: Reference to a FlavorV2 in compute to populate flavorId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  flavorIdSelector:
                    description: Selector for a FlavorV2 in compute to populate flavorId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  flavorName:
                    description: optional string →  The name of the desired flavor
                      for the server. Required if flavor_id is empty. Changing this
                      resizes the existing server. The name of the desired flavor
                      for the server. Required if `flavor_id` is empty. Changing this
                      resizes the existing server.
                    type: string
                  forceDelete:
                    description: optional boolean →  Whether to force the compute
                      instance to be forcefully deleted. This is useful for environments
                      that have reclaim / soft deletion enabled. Whether to force
                      the compute instance to be forcefully deleted. This is useful
                      for environments that have reclaim / soft deletion enabled.
                    type: boolean
                  imageId:
                    description: optional string →  The image ID of the desired image
                      for the server. Required if image_name is empty and not booting
                      from a volume. Do not specify if booting from a volume. Changing
                      this creates a new server. The image ID of the desired image
                      for the server. Required if `image_name` is empty and not booting
                      from a volume. Do not specify if booting from a volume. Changing
                      this creates a new server.
                    type: string
                  imageIdRef:
                    description: Reference to a Image in disk to populate imageId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  imageIdSelector:
                    description: Selector for a Image in disk to populate imageId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  imageName:
                    description: optional string →  The name of the desired image
                      for the server. Required if image_id is empty and not booting
                      from a volume. Do not specify if booting from a volume. Changing
                      this creates a new server. The name of the desired image for
                      the server. Required if `image_id` is empty and not booting
                      from a volume. Do not specify if booting from a volume. Changing
                      this creates a new server.
                    type: string
                  keyPair:
                    description: optional string →  The name of a key pair to put
                      on the server. The key pair must already be created and associated
                      with the tenant's account. Changing this creates a new server.
                      The name of a key pair to put on the server. The key pair must
                      already be created and associated with the tenant's account.
                      Changing this creates a new server.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: optional map of string →  Metadata key/value pairs
                      to make available from within the instance. Changing this updates
                      the existing server metadata. Metadata key/value pairs to make
                      available from within the instance. Changing this updates the
                      existing server metadata.
                    type: object
                  name:
                    description: required string →  A unique name for the resource.
                      A unique name for the resource.
                    type: string
                  network:
                    description: optional →  An array of one or more networks to attach
                      to the instance. The network object structure is documented
                      below. Changing this creates a new server. An array of one or
                      more networks to attach to the instance. The network object
                      structure is documented below. Changing this creates a new server.
                    items:
                      properties:
                        accessNetwork:
                          description: optional boolean →  Specifies if this network
                            should be used for provisioning access. Accepts true or
                            false. Defaults to false. Specifies if this network should
                            be used for provisioning access. Accepts true or false.
                            Defaults to false.
                          type: boolean
                        fixedIpV4:
                          description: optional string →  Specifies a fixed IPv4 address
                            to be used on this network. Changing this creates a new
                            server. Specifies a fixed IPv4 address to be used on this
                            network. Changing this creates a new server.
                          type: string
                        name:
                          description: required string →  A unique name for the resource.
                            The human-readable name of the network. Optional if `uuid`
                            or `port` is provided. Changing this creates a new server.
                          type: string
                        port:
                          description: 'optional string →  The port UUID of a network
                            to attach to the server. Optional if uuid or name is provided.
                            Changing this creates a new server. Note: If port is used,
                            only its security groups will be applied instead of security_groups
                            instance argument. The port UUID of a network to attach
                            to the server. Optional if `uuid` or `name` is provided.
                            Changing this creates a new server. _note_ If port is
                            used, only its security groups will be applied instead
                            of security_groups instance argument.'
                          type: string
                        portRef:
                          description: Reference to a Port in network to populate
                            port.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        portSelector:
                          description: Selector for a Port in network to populate
                            port.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        uuid:
                          description: optional string →  The network UUID to attach
                            to the server. Optional if port or name is provided. Changing
                            this creates a new server. The network UUID to attach
                            to the server. Optional if `port` or `name` is provided.
                            Changing this creates a new server.
                          type: string
                        uuidRef:
                          description: Reference to a Network in network to populate
                            uuid.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        uuidSelector:
                          description: Selector for a Network in network to populate
                            uuid.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                      type: object
                    type: array
                  networkMode:
                    description: optional string →  Special string for network option
                      to create the server. network_mode can be "auto" or "none".
                      Please see the following reference for more information. Conflicts
                      with network. Special string for `network` option to create
                      the server. `network_mode` can be `"auto"` or `"none"`. Please
                      see the following [reference](https://docs.openstack.org/api-ref/compute/?expanded=create-server-detail#id11)
                      for more information. Conflicts with `network`.
                    type: string
                  personality:
                    description: 'optional →  Customize the personality of an instance
                      by defining one or more files and their contents. The personality
                      structure is described below. Note: ''config_drive'' must be
                      enabled. Customize the personality of an instance by defining
                      one or more files and their contents. The personality structure
                      is described below. _note_ ''config_drive'' must be enabled.'
                    items:
                      properties:
                        content:
                          description: required string →  The contents of the file.
                            Limited to 255 bytes. The contents of the file. Limited
                            to 255 bytes.
                          type: string
                        file:
                          description: required string →  The absolute path of the
                            destination file. The absolute path of the destination
                            file.
                          type: string
                      type: object
                    type: array
                  powerState:
                    description: exec or files are not supported. Provide the VM state.
                      Only 'active' and 'shutoff' are supported values. _note_ If
                      the initial power_state is the shutoff the VM will be stopped
                      immediately after build and the provisioners like remote-exec
                      or files are not supported.
                    type: string
                  region:
                    description: optional string →  The region in which to create
                      the server instance. If omitted, the region argument of the
                      provider is used. Changing this creates a new server. The region
                      in which to create the server instance. If omitted, the `region`
                      argument of the provider is used. Changing this creates a new
                      server.
                    type: string
                  schedulerHints:
                    description: optional →  Provide the Nova scheduler with hints
                      on how the instance should be launched. The available hints
                      are described below. Provide the Nova scheduler with hints on
                      how the instance should be launched. The available hints are
                      described below.
                    items:
                      properties:
                        group:
                          description: optional string →  A UUID of a Server Group.
                            The instance will be placed into that group. A UUID of
                            a Server Group. The instance will be placed into that
                            group.
                          type: string
                      type: object
                    type: array
                  securityGroups:
                    description: 'optional set of string →  An array of one or more
                      security group names to associate with the server. Changing
                      this results in adding/removing security groups from the existing
                      server. Note: When attaching the instance to networks using
                      Ports, place the security groups on the Port and not the instance.
                      Note: Names should be used and not ids, as ids trigger unnecessary
                      updates. An array of one or more security group names to associate
                      with the server. Changing this results in adding/removing security
                      groups from the existing server. _note_ When attaching the instance
                      to networks using Ports, place the security groups on the Port
                      and not the instance. _note_ Names should be used and not ids,
                      as ids trigger unnecessary updates.'
                    items:
                      type: string
                    type: array
                  stopBeforeDestroy:
                    description: optional boolean →  Whether to try stop instance
                      gracefully before destroying it, thus giving chance for guest
                      OS daemons to stop correctly. If instance doesn't stop within
                      timeout, it will be destroyed anyway. Whether to try stop instance
                      gracefully before destroying it, thus giving chance for guest
                      OS daemons to stop correctly. If instance doesn't stop within
                      timeout, it will be destroyed anyway.
                    type: boolean
                  tags:
                    description: optional set of string →  A set of string tags for
                      the instance. Changing this updates the existing instance tags.
                      A set of string tags for the instance. Changing this updates
                      the existing instance tags.
                    items:
                      type: string
                    type: array
                  userData:
                    description: "optional string →  The user data to provide when
                      launching the instance.\tChanging this creates a new server.
                      The user data to provide when launching the instance.\tChanging
                      this creates a new server."
                    type: string
                  vendorOptions:
                    description: specific options. Supported options are described
                      below. Map of additional vendor-specific options. Supported
                      options are described below.
                    items:
                      properties:
                        detachPortsBeforeDestroy:
                          description: optional boolean →  Whether to try to detach
                            all attached ports to the vm before destroying it to make
                            sure the port state is correct after the vm destruction.
                            This is helpful when the port is not deleted. Whether
                            to try to detach all attached ports to the vm before destroying
                            it to make sure the port state is correct after the vm
                            destruction. This is helpful when the port is not deleted.
                          type: boolean
                        ignoreResizeConfirmation:
                          description: optional boolean →  Boolean to control whether
                            to ignore manual confirmation of the instance resizing.
                            Boolean to control whether to ignore manual confirmation
                            of the instance resizing.
                          type: boolean
                      type: object
                    type: array
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  accessIpV4:
                    description: optional string →  The first detected Fixed IPv4
                      address. The first detected Fixed IPv4 address.
                    type: string
                  availabilityZone:
                    description: optional string →  The availability zone in which
                      to create the server. Conflicts with availability_zone_hints.
                      Changing this creates a new server. The availability zone in
                      which to create the server. Conflicts with `availability_zone_hints`.
                      Changing this creates a new server.
                    type: string
                  blockDevice:
                    description: optional →  Configuration of block devices. The block_device
                      structure is documented below. Changing this creates a new server.
                      You can specify multiple block devices which will create an
                      instance with multiple disks. This configuration is very flexible,
                      so please see the following reference for more information.
                      Configuration of block devices. The block_device structure is
                      documented below. Changing this creates a new server. You can
                      specify multiple block devices which will create an instance
                      with multiple disks. This configuration is very flexible, so
                      please see the following [reference](https://docs.openstack.org/nova/latest/user/block-device-mapping.html)
                      for more information.
                    items:
                      properties:
                        bootIndex:
                          description: '1 if more than one is configured. Changing
                            this creates a new server. Note: You must set the boot
                            index to 0 for one of the block devices if more than one
                            is defined. The boot index of the volume. It defaults
                            to 0 if only one `block_device` is specified, and to -1
                            if more than one is configured. Changing this creates
                            a new server. _note_ You must set the boot index to 0
                            for one of the block devices if more than one is defined.'
                          type: number
                        deleteOnTermination:
                          description: optional boolean →  Delete the volume / block
                            device upon termination of the instance. Defaults to false.
                            Changing this creates a new server.  raw HTML omitted  It
                            is important to enable delete_on_termination for volumes
                            created with instance. Defaults to false. Changing this
                            creates a new server. __note__ It is important to enable
                            `delete_on_termination` for volumes created with instance
                          type: boolean
                        destinationType:
                          description: optional string →  The type that gets created.
                            Possible values are "volume" and "local". Changing this
                            creates a new server. The type that gets created. Possible
                            values are "volume" and "local". Changing this creates
                            a new server.
                          type: string
                        deviceType:
                          description: level device type that will be used. Most common
                            thing is to leave this empty. Changing this creates a
                            new server. The low-level device type that will be used.
                            Most common thing is to leave this empty. Changing this
                            creates a new server.
                          type: string
                        diskBus:
                          description: level disk bus that will be used. Most common
                            thing is to leave this empty. Changing this creates a
                            new server. The low-level disk bus that will be used.
                            Most common thing is to leave this empty. Changing this
                            creates a new server.
                          type: string
                        guestFormat:
                          description: 'optional string →  Specifies the guest server
                            disk file system format, such as ext2, ext3, ext4, xfs
                            or swap. Swap block device mappings have the following
                            restrictions: source_type must be blank and destination_type
                            must be local and only one swap disk per server and the
                            size of the swap disk must be less than or equal to the
                            swap size of the flavor. Changing this creates a new server.
                            Specifies the guest server disk file system format, such
                            as `ext2`, `ext3`, `ext4`, `xfs` or `swap`. Swap block
                            device mappings have the following restrictions: source_type
                            must be blank and destination_type must be local and only
                            one swap disk per server and the size of the swap disk
                            must be less than or equal to the swap size of the flavor.
                            Changing this creates a new server.'
                          type: string
                        sourceType:
                          description: required string →  The source type of the device.
                            Must be one of "blank", "image", "volume", or "snapshot".
                            Changing this creates a new server. The source type of
                            the device. Must be one of "blank", "image", "volume",
                            or "snapshot". Changing this creates a new server.
                          type: string
                        volumeSize:
                          description: 'optional number →  The size of the volume
                            to create (in gigabytes). Required in the following combinations:
                            source=image and destination=volume, source=blank and
                            destination=local, and source=blank and destination=volume.
                            Changing this creates a new server. The size of the volume
                            to create (in gigabytes). Required in the following combinations:
                            source=image and destination=volume, source=blank and
                            destination=local, and source=blank and destination=volume.
                            Changing this creates a new server.'
                          type: number
                        volumeType:
                          description: optional string →  The volume type that will
                            be used. Changing this creates a new server. The volume
                            type that will be used. Changing this creates a new server.
                          type: string
                      type: object
                    type: array
                  configDrive:
                    description: optional boolean →  Whether to use the config_drive
                      feature to configure the instance. Changing this creates a new
                      server. Whether to use the config_drive feature to configure
                      the instance. Changing this creates a new server.
                    type: boolean
                  flavorName:
                    description: optional string →  The name of the desired flavor
                      for the server. Required if flavor_id is empty. Changing this
                      resizes the existing server. The name of the desired flavor
                      for the server. Required if `flavor_id` is empty. Changing this
                      resizes the existing server.
                    type: string
                  forceDelete:
                    description: optional boolean →  Whether to force the compute
                      instance to be forcefully deleted. This is useful for environments
                      that have reclaim / soft deletion enabled. Whether to force
                      the compute instance to be forcefully deleted. This is useful
                      for environments that have reclaim / soft deletion enabled.
                    type: boolean
                  imageName:
                    description: optional string →  The name of the desired image
                      for the server. Required if image_id is empty and not booting
                      from a volume. Do not specify if booting from a volume. Changing
                      this creates a new server. The name of the desired image for
                      the server. Required if `image_id` is empty and not booting
                      from a volume. Do not specify if booting from a volume. Changing
                      this creates a new server.
                    type: string
                  keyPair:
                    description: optional string →  The name of a key pair to put
                      on the server. The key pair must already be created and associated
                      with the tenant's account. Changing this creates a new server.
                      The name of a key pair to put on the server. The key pair must
                      already be created and associated with the tenant's account.
                      Changing this creates a new server.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: optional map of string →  Metadata key/value pairs
                      to make available from within the instance. Changing this updates
                      the existing server metadata. Metadata key/value pairs to make
                      available from within the instance. Changing this updates the
                      existing server metadata.
                    type: object
                  name:
                    description: required string →  A unique name for the resource.
                      A unique name for the resource.
                    type: string
                  network:
                    description: optional →  An array of one or more networks to attach
                      to the instance. The network object structure is documented
                      below. Changing this creates a new server. An array of one or
                      more networks to attach to the instance. The network object
                      structure is documented below. Changing this creates a new server.
                    items:
                      properties:
                        accessNetwork:
                          description: optional boolean →  Specifies if this network
                            should be used for provisioning access. Accepts true or
                            false. Defaults to false. Specifies if this network should
                            be used for provisioning access. Accepts true or false.
                            Defaults to false.
                          type: boolean
                        fixedIpV4:
                          description: optional string →  Specifies a fixed IPv4 address
                            to be used on this network. Changing this creates a new
                            server. Specifies a fixed IPv4 address to be used on this
                            network. Changing this creates a new server.
                          type: string
                        name:
                          description: required string →  A unique name for the resource.
                            The human-readable name of the network. Optional if `uuid`
                            or `port` is provided. Changing this creates a new server.
                          type: string
                      type: object
                    type: array
                  networkMode:
                    description: optional string →  Special string for network option
                      to create the server. network_mode can be "auto" or "none".
                      Please see the following reference for more information. Conflicts
                      with network. Special string for `network` option to create
                      the server. `network_mode` can be `"auto"` or `"none"`. Please
                      see the following [reference](https://docs.openstack.org/api-ref/compute/?expanded=create-server-detail#id11)
                      for more information. Conflicts with `network`.
                    type: string
                  personality:
                    description: 'optional →  Customize the personality of an instance
                      by defining one or more files and their contents. The personality
                      structure is described below. Note: ''config_drive'' must be
                      enabled. Customize the personality of an instance by defining
                      one or more files and their contents. The personality structure
                      is described below. _note_ ''config_drive'' must be enabled.'
                    items:
                      properties:
                        content:
                          description: required string →  The contents of the file.
                            Limited to 255 bytes. The contents of the file. Limited
                            to 255 bytes.
                          type: string
                        file:
                          description: required string →  The absolute path of the
                            destination file. The absolute path of the destination
                            file.
                          type: string
                      type: object
                    type: array
                  powerState:
                    description: exec or files are not supported. Provide the VM state.
                      Only 'active' and 'shutoff' are supported values. _note_ If
                      the initial power_state is the shutoff the VM will be stopped
                      immediately after build and the provisioners like remote-exec
                      or files are not supported.
                    type: string
                  region:
                    description: optional string →  The region in which to create
                      the server instance. If omitted, the region argument of the
                      provider is used. Changing this creates a new server. The region
                      in which to create the server instance. If omitted, the `region`
                      argument of the provider is used. Changing this creates a new
                      server.
                    type: string
                  schedulerHints:
                    description: optional →  Provide the Nova scheduler with hints
                      on how the instance should be launched. The available hints
                      are described below. Provide the Nova scheduler with hints on
                      how the instance should be launched. The available hints are
                      described below.
                    items:
                      properties:
                        group:
                          description: optional string →  A UUID of a Server Group.
                            The instance will be placed into that group. A UUID of
                            a Server Group. The instance will be placed into that
                            group.
                          type: string
                      type: object
                    type: array
                  securityGroups:
                    description: 'optional set of string →  An array of one or more
                      security group names to associate with the server. Changing
                      this results in adding/removing security groups from the existing
                      server. Note: When attaching the instance to networks using
                      Ports, place the security groups on the Port and not the instance.
                      Note: Names should be used and not ids, as ids trigger unnecessary
                      updates. An array of one or more security group names to associate
                      with the server. Changing this results in adding/removing security
                      groups from the existing server. _note_ When attaching the instance
                      to networks using Ports, place the security groups on the Port
                      and not the instance. _note_ Names should be used and not ids,
                      as ids trigger unnecessary updates.'
                    items:
                      type: string
                    type: array
                  stopBeforeDestroy:
                    description: optional boolean →  Whether to try stop instance
                      gracefully before destroying it, thus giving chance for guest
                      OS daemons to stop correctly. If instance doesn't stop within
                      timeout, it will be destroyed anyway. Whether to try stop instance
                      gracefully before destroying it, thus giving chance for guest
                      OS daemons to stop correctly. If instance doesn't stop within
                      timeout, it will be destroyed anyway.
                    type: boolean
                  tags:
                    description: optional set of string →  A set of string tags for
                      the instance. Changing this updates the existing instance tags.
                      A set of string tags for the instance. Changing this updates
                      the existing instance tags.
                    items:
                      type: string
                    type: array
                  userData:
                    description: "optional string →  The user data to provide when
                      launching the instance.\tChanging this creates a new server.
                      The user data to provide when launching the instance.\tChanging
                      this creates a new server."
                    type: string
                  vendorOptions:
                    description: specific options. Supported options are described
                      below. Map of additional vendor-specific options. Supported
                      options are described below.
                    items:
                      properties:
                        detachPortsBeforeDestroy:
                          description: optional boolean →  Whether to try to detach
                            all attached ports to the vm before destroying it to make
                            sure the port state is correct after the vm destruction.
                            This is helpful when the port is not deleted. Whether
                            to try to detach all attached ports to the vm before destroying
                            it to make sure the port state is correct after the vm
                            destruction. This is helpful when the port is not deleted.
                          type: boolean
                        ignoreResizeConfirmation:
                          description: optional boolean →  Boolean to control whether
                            to ignore manual confirmation of the instance resizing.
                            Boolean to control whether to ignore manual confirmation
                            of the instance resizing.
                          type: boolean
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: InstanceStatus defines the observed state of Instance.
            properties:
              atProvider:
                properties:
                  accessIpV4:
                    description: optional string →  The first detected Fixed IPv4
                      address. The first detected Fixed IPv4 address.
                    type: string
                  allMetadata:
                    additionalProperties:
                      type: string
                    type: object
                  allTags:
                    description: set of string →  The collection of tags assigned
                      on the instance, which have been explicitly and implicitly added.
                      The collection of tags assigned on the instance, which have
                      been explicitly and implicitly added.
                    items:
                      type: string
                    type: array
                  availabilityZone:
                    description: optional string →  The availability zone in which
                      to create the server. Conflicts with availability_zone_hints.
                      Changing this creates a new server. The availability zone in
                      which to create the server. Conflicts with `availability_zone_hints`.
                      Changing this creates a new server.
                    type: string
                  blockDevice:
                    description: optional →  Configuration of block devices. The block_device
                      structure is documented below. Changing this creates a new server.
                      You can specify multiple block devices which will create an
                      instance with multiple disks. This configuration is very flexible,
                      so please see the following reference for more information.
                      Configuration of block devices. The block_device structure is
                      documented below. Changing this creates a new server. You can
                      specify multiple block devices which will create an instance
                      with multiple disks. This configuration is very flexible, so
                      please see the following [reference](https://docs.openstack.org/nova/latest/user/block-device-mapping.html)
                      for more information.
                    items:
                      properties:
                        bootIndex:
                          description: '1 if more than one is configured. Changing
                            this creates a new server. Note: You must set the boot
                            index to 0 for one of the block devices if more than one
                            is defined. The boot index of the volume. It defaults
                            to 0 if only one `block_device` is specified, and to -1
                            if more than one is configured. Changing this creates
                            a new server. _note_ You must set the boot index to 0
                            for one of the block devices if more than one is defined.'
                          type: number
                        deleteOnTermination:
                          description: optional boolean →  Delete the volume / block
                            device upon termination of the instance. Defaults to false.
                            Changing this creates a new server.  raw HTML omitted  It
                            is important to enable delete_on_termination for volumes
                            created with instance. Defaults to false. Changing this
                            creates a new server. __note__ It is important to enable
                            `delete_on_termination` for volumes created with instance
                          type: boolean
                        destinationType:
                          description: optional string →  The type that gets created.
                            Possible values are "volume" and "local". Changing this
                            creates a new server. The type that gets created. Possible
                            values are "volume" and "local". Changing this creates
                            a new server.
                          type: string
                        deviceType:
                          description: level device type that will be used. Most common
                            thing is to leave this empty. Changing this creates a
                            new server. The low-level device type that will be used.
                            Most common thing is to leave this empty. Changing this
                            creates a new server.
                          type: string
                        diskBus:
                          description: level disk bus that will be used. Most common
                            thing is to leave this empty. Changing this creates a
                            new server. The low-level disk bus that will be used.
                            Most common thing is to leave this empty. Changing this
                            creates a new server.
                          type: string
                        guestFormat:
                          description: 'optional string →  Specifies the guest server
                            disk file system format, such as ext2, ext3, ext4, xfs
                            or swap. Swap block device mappings have the following
                            restrictions: source_type must be blank and destination_type
                            must be local and only one swap disk per server and the
                            size of the swap disk must be less than or equal to the
                            swap size of the flavor. Changing this creates a new server.
                            Specifies the guest server disk file system format, such
                            as `ext2`, `ext3`, `ext4`, `xfs` or `swap`. Swap block
                            device mappings have the following restrictions: source_type
                            must be blank and destination_type must be local and only
                            one swap disk per server and the size of the swap disk
                            must be less than or equal to the swap size of the flavor.
                            Changing this creates a new server.'
                          type: string
                        sourceType:
                          description: required string →  The source type of the device.
                            Must be one of "blank", "image", "volume", or "snapshot".
                            Changing this creates a new server. The source type of
                            the device. Must be one of "blank", "image", "volume",
                            or "snapshot". Changing this creates a new server.
                          type: string
                        uuid:
                          description: optional string →  The UUID of the image, volume,
                            or snapshot. Optional if source_type is set to "blank".
                            Changing this creates a new server. The UUID of the image,
                            volume, or snapshot. Optional if `source_type` is set
                            to `"blank"`. Changing this creates a new server.
                          type: string
                        volumeSize:
                          description: 'optional number →  The size of the volume
                            to create (in gigabytes). Required in the following combinations:
                            source=image and destination=volume, source=blank and
                            destination=local, and source=blank and destination=volume.
                            Changing this creates a new server. The size of the volume
                            to create (in gigabytes). Required in the following combinations:
                            source=image and destination=volume, source=blank and
                            destination=local, and source=blank and destination=volume.
                            Changing this creates a new server.'
                          type: number
                        volumeType:
                          description: optional string →  The volume type that will
                            be used. Changing this creates a new server. The volume
                            type that will be used. Changing this creates a new server.
                          type: string
                      type: object
                    type: array
                  configDrive:
                    description: optional boolean →  Whether to use the config_drive
                      feature to configure the instance. Changing this creates a new
                      server. Whether to use the config_drive feature to configure
                      the instance. Changing this creates a new server.
                    type: boolean
                  flavorId:
                    description: optional string →  The flavor ID of the desired flavor
                      for the server. Required if flavor_name is empty. Changing this
                      resizes the existing server. The flavor ID of the desired flavor
                      for the server. Required if `flavor_name` is empty. Changing
                      this resizes the existing server.
                    type: string
                  flavorName:
                    description: optional string →  The name of the desired flavor
                      for the server. Required if flavor_id is empty. Changing this
                      resizes the existing server. The name of the desired flavor
                      for the server. Required if `flavor_id` is empty. Changing this
                      resizes the existing server.
                    type: string
                  forceDelete:
                    description: optional boolean →  Whether to force the compute
                      instance to be forcefully deleted. This is useful for environments
                      that have reclaim / soft deletion enabled. Whether to force
                      the compute instance to be forcefully deleted. This is useful
                      for environments that have reclaim / soft deletion enabled.
                    type: boolean
                  id:
                    description: string →  ID of the resource.
                    type: string
                  imageId:
                    description: optional string →  The image ID of the desired image
                      for the server. Required if image_name is empty and not booting
                      from a volume. Do not specify if booting from a volume. Changing
                      this creates a new server. The image ID of the desired image
                      for the server. Required if `image_name` is empty and not booting
                      from a volume. Do not specify if booting from a volume. Changing
                      this creates a new server.
                    type: string
                  imageName:
                    description: optional string →  The name of the desired image
                      for the server. Required if image_id is empty and not booting
                      from a volume. Do not specify if booting from a volume. Changing
                      this creates a new server. The name of the desired image for
                      the server. Required if `image_id` is empty and not booting
                      from a volume. Do not specify if booting from a volume. Changing
                      this creates a new server.
                    type: string
                  keyPair:
                    description: optional string →  The name of a key pair to put
                      on the server. The key pair must already be created and associated
                      with the tenant's account. Changing this creates a new server.
                      The name of a key pair to put on the server. The key pair must
                      already be created and associated with the tenant's account.
                      Changing this creates a new server.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: optional map of string →  Metadata key/value pairs
                      to make available from within the instance. Changing this updates
                      the existing server metadata. Metadata key/value pairs to make
                      available from within the instance. Changing this updates the
                      existing server metadata.
                    type: object
                  name:
                    description: required string →  A unique name for the resource.
                      A unique name for the resource.
                    type: string
                  network:
                    description: optional →  An array of one or more networks to attach
                      to the instance. The network object structure is documented
                      below. Changing this creates a new server. An array of one or
                      more networks to attach to the instance. The network object
                      structure is documented below. Changing this creates a new server.
                    items:
                      properties:
                        accessNetwork:
                          description: optional boolean →  Specifies if this network
                            should be used for provisioning access. Accepts true or
                            false. Defaults to false. Specifies if this network should
                            be used for provisioning access. Accepts true or false.
                            Defaults to false.
                          type: boolean
                        fixedIpV4:
                          description: optional string →  Specifies a fixed IPv4 address
                            to be used on this network. Changing this creates a new
                            server. Specifies a fixed IPv4 address to be used on this
                            network. Changing this creates a new server.
                          type: string
                        mac:
                          description: string →  The MAC address of the NIC on that
                            network. The MAC address of the NIC on that network.
                          type: string
                        name:
                          description: required string →  A unique name for the resource.
                            The human-readable name of the network. Optional if `uuid`
                            or `port` is provided. Changing this creates a new server.
                          type: string
                        port:
                          description: 'optional string →  The port UUID of a network
                            to attach to the server. Optional if uuid or name is provided.
                            Changing this creates a new server. Note: If port is used,
                            only its security groups will be applied instead of security_groups
                            instance argument. The port UUID of a network to attach
                            to the server. Optional if `uuid` or `name` is provided.
                            Changing this creates a new server. _note_ If port is
                            used, only its security groups will be applied instead
                            of security_groups instance argument.'
                          type: string
                        uuid:
                          description: optional string →  The network UUID to attach
                            to the server. Optional if port or name is provided. Changing
                            this creates a new server. The network UUID to attach
                            to the server. Optional if `port` or `name` is provided.
                            Changing this creates a new server.
                          type: string
                      type: object
                    type: array
                  networkMode:
                    description: optional string →  Special string for network option
                      to create the server. network_mode can be "auto" or "none".
                      Please see the following reference for more information. Conflicts
                      with network. Special string for `network` option to create
                      the server. `network_mode` can be `"auto"` or `"none"`. Please
                      see the following [reference](https://docs.openstack.org/api-ref/compute/?expanded=create-server-detail#id11)
                      for more information. Conflicts with `network`.
                    type: string
                  personality:
                    description: 'optional →  Customize the personality of an instance
                      by defining one or more files and their contents. The personality
                      structure is described below. Note: ''config_drive'' must be
                      enabled. Customize the personality of an instance by defining
                      one or more files and their contents. The personality structure
                      is described below. _note_ ''config_drive'' must be enabled.'
                    items:
                      properties:
                        content:
                          description: required string →  The contents of the file.
                            Limited to 255 bytes. The contents of the file. Limited
                            to 255 bytes.
                          type: string
                        file:
                          description: required string →  The absolute path of the
                            destination file. The absolute path of the destination
                            file.
                          type: string
                      type: object
                    type: array
                  powerState:
                    description: exec or files are not supported. Provide the VM state.
                      Only 'active' and 'shutoff' are supported values. _note_ If
                      the initial power_state is the shutoff the VM will be stopped
                      immediately after build and the provisioners like remote-exec
                      or files are not supported.
                    type: string
                  region:
                    description: optional string →  The region in which to create
                      the server instance. If omitted, the region argument of the
                      provider is used. Changing this creates a new server. The region
                      in which to create the server instance. If omitted, the `region`
                      argument of the provider is used. Changing this creates a new
                      server.
                    type: string
                  schedulerHints:
                    description: optional →  Provide the Nova scheduler with hints
                      on how the instance should be launched. The available hints
                      are described below. Provide the Nova scheduler with hints on
                      how the instance should be launched. The available hints are
                      described below.
                    items:
                      properties:
                        group:
                          description: optional string →  A UUID of a Server Group.
                            The instance will be placed into that group. A UUID of
                            a Server Group. The instance will be placed into that
                            group.
                          type: string
                      type: object
                    type: array
                  securityGroups:
                    description: 'optional set of string →  An array of one or more
                      security group names to associate with the server. Changing
                      this results in adding/removing security groups from the existing
                      server. Note: When attaching the instance to networks using
                      Ports, place the security groups on the Port and not the instance.
                      Note: Names should be used and not ids, as ids trigger unnecessary
                      updates. An array of one or more security group names to associate
                      with the server. Changing this results in adding/removing security
                      groups from the existing server. _note_ When attaching the instance
                      to networks using Ports, place the security groups on the Port
                      and not the instance. _note_ Names should be used and not ids,
                      as ids trigger unnecessary updates.'
                    items:
                      type: string
                    type: array
                  stopBeforeDestroy:
                    description: optional boolean →  Whether to try stop instance
                      gracefully before destroying it, thus giving chance for guest
                      OS daemons to stop correctly. If instance doesn't stop within
                      timeout, it will be destroyed anyway. Whether to try stop instance
                      gracefully before destroying it, thus giving chance for guest
                      OS daemons to stop correctly. If instance doesn't stop within
                      timeout, it will be destroyed anyway.
                    type: boolean
                  tags:
                    description: optional set of string →  A set of string tags for
                      the instance. Changing this updates the existing instance tags.
                      A set of string tags for the instance. Changing this updates
                      the existing instance tags.
                    items:
                      type: string
                    type: array
                  userData:
                    description: "optional string →  The user data to provide when
                      launching the instance.\tChanging this creates a new server.
                      The user data to provide when launching the instance.\tChanging
                      this creates a new server."
                    type: string
                  vendorOptions:
                    description: specific options. Supported options are described
                      below. Map of additional vendor-specific options. Supported
                      options are described below.
                    items:
                      properties:
                        detachPortsBeforeDestroy:
                          description: optional boolean →  Whether to try to detach
                            all attached ports to the vm before destroying it to make
                            sure the port state is correct after the vm destruction.
                            This is helpful when the port is not deleted. Whether
                            to try to detach all attached ports to the vm before destroying
                            it to make sure the port state is correct after the vm
                            destruction. This is helpful when the port is not deleted.
                          type: boolean
                        ignoreResizeConfirmation:
                          description: optional boolean →  Boolean to control whether
                            to ignore manual confirmation of the instance resizing.
                            Boolean to control whether to ignore manual confirmation
                            of the instance resizing.
                          type: boolean
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
